{"version":3,"sources":["components/navbar.js","components/filters.js","components/modal.js","components/Spinner.js","components/table.js","components/allbanks.js","components/favourites.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","Navbar","bg","expand","Container","Brand","className","href","exact","style","textDecoration","activeClassName","to","React","Component","marginTop","width","Dropdown","Toggle","variant","id","this","props","city","Menu","align","Item","onClick","e","changeCity","target","outerText","category","changeCategory","InputGroup","onChange","changeSearch","value","FormControl","placeholder","modal","Card","Header","ListGroup","Spinner","height","paddingTop","role","table","state","show","modalData","pagePerRow","tableRef","text","handleClose","setState","handleShow","res","history","push","columnDefs","wrapText","headerClass","textAlign","sortable","filter","handlePagination","parseInt","paginationSetPageSize","Number","onGridReady","params","api","actionButton","console","log","document","getElementById","data","ifsc","getElementsByTagName","innerHTML","toogle","isLoading","defaultColDef","rowData","pagination","onRowClicked","rowHeight","paginationPageSize","rowSelection","headerName","field","cellRendererFramework","favourites","includes","flex","display","marginRight","size","withRouter","AllBanks","searchTerm","App","secondaryData","cache","makeRequest","element","translate","toString","toUpperCase","searchValue","hasOwnProperty","endPoint","Axios","get","then","result","temp","row","flag","splice","indexOf","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.7325199e.chunk.js","sourcesContent":["import { Navbar, Container} from 'react-bootstrap';\nimport { NavLink } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport '../styles/styles.css';\nimport { Color } from 'ag-grid-community';\nexport default class navbar extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand className=\"navHeading\" href=\"#home\">Find Your Bank</Navbar.Brand>\n\n          <div>\n            <NavLink exact style={{ textDecoration: 'none' }} className=\"menu-option\" activeClassName=\"active_class\" to=\"/\">All Banks</NavLink>\n            <NavLink exact style={{ textDecoration: 'none' }} className=\"menu-option\" activeClassName=\"active_class\" to=\"/favourites\">Favourites</NavLink>\n\n          </div>\n\n        </Container>\n      </Navbar>\n\n\n\n\n    );\n  }\n}","import { InputGroup, FormControl, Container, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\n\nexport default class navbar extends React.Component {\n    \n    render() {\n        \n        return (\n            <Container>\n\n                <div style = {{marginTop:\"10px\",width:'100%'}} className=\"row\">\n                    <div className=\"col-3\">\n                        <p className=\"searchLabel\">Select City</p>\n                        <Dropdown>\n                       \n                            <Dropdown.Toggle className=\"city\" variant=\"light\" id=\"dropdown-basic\">\n                                {this.props.city}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu align={'start'}>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCity(e.target.outerText)}}>Mumbai</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCity(e.target.outerText)}}>Pune</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCity(e.target.outerText)}}>Banglore</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCity(e.target.outerText)}}>Delhi</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCity(e.target.outerText)}}>Chennai</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n\n                    <div className=\"col-3\">\n                        <p className=\"searchLabel\">Select search category</p>\n                        <Dropdown>\n                            <Dropdown.Toggle className=\"category\" variant=\"light\" id=\"dropdown-basic\">\n                                {this.props.category}\n                               \n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCategory(e.target.outerText)}}>Bank Name</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCategory(e.target.outerText)}}>IFSC</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCategory(e.target.outerText)}}>Branch</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCategory(e.target.outerText)}}>Address</Dropdown.Item>\n                                <Dropdown.Item onClick={(e)=>{this.props.changeCategory(e.target.outerText)}}>Bank Id</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n\n\n                    <div className=\"col-6\">\n                        <p className=\"searchLabel\">Search box\n                        \n                        </p>\n                        <InputGroup className=\"mb-3\" onChange={(e)=>this.props.changeSearch(e.target.value)}>\n                            <FormControl\n                           \n                                placeholder=\"Enter Search term\"\n                                aria-label=\"Search Area\"\n                                aria-describedby=\"basic-addon1\"\n                            />\n                        </InputGroup>\n\n                    </div>\n\n                </div>\n\n\n\n            </Container>\n\n\n        );\n\n    }\n}","import { ListGroup, Button, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\n\nexport default class modal extends React.Component {\n\n\n\n    render() {\n        return (\n            <>\n                        <Card style={{ width: '18rem' }}>\n  <Card.Header>Featured</Card.Header>\n  <ListGroup variant=\"flush\">\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n  </ListGroup>\n</Card>\n                {/* <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Bank</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"bank-info\">\n                        \n                        <div className=\"details-heading\">Bank Details</div>\n\n                       \n\n                            <div>\n\n                           <div className=\"bank-name\">{this.props.modalData.bank_name}</div>\n\n                            <div className=\"row\">  \n\n                            <div className=\"col-4\">\n                                <label>Branch:</label>\n                                <div>{this.props.modalData.branch}</div>\n                            </div>\n\n\n\n                            <div className=\"col-4\">\n                                <label>IFSC:</label>\n                                <div>{this.props.modalData.ifsc}</div>\n                            </div>\n                            \n                            <div className=\"col-4\">\n                                <label>Bank Id:</label>\n                                <div>{this.props.modalData.bank_id}</div>\n                            </div>\n\n                            </div>\n\n<br></br>\n\n                            <div className=\"row\">  \n\n<div className=\"col-4\">\n    <label>City:</label>\n    <div>{this.props.modalData.city}</div>\n</div>\n\n\n\n<div className=\"col-4\">\n    <label>District:</label>\n    <div>{this.props.modalData.district}</div>\n</div>\n\n<div className=\"col-4\">\n    <label>State:</label>\n    <label>{this.props.modalData.state}</label>\n</div>\n\n</div>\n\n<br></br>\n\n<div className=\"row\"> \n<div>\n    <label>Address:</label>\n    <div>{this.props.modalData.address}</div>\n</div>\n</div>\n\n\n\n\n\n\n\n\n                            </div>\n                        \n                       \n\n\n                        </div>\n                        \n                       \n                       \n                      \n                       \n                        \n                        </Modal.Body>\n                   \n                </Modal> */}\n            </>\n        );\n    }\n}","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Spinner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n                <div style={{width:'99%', height:'500px' ,paddingTop:'220px'}} className=\"d-flex justify-content-center\">\r\n                    <div className=\"spinner-border\" role=\"status\"></div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport Modal from './modal'\nimport { Container, Dropdown} from 'react-bootstrap';\nimport '../styles/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Spinner from './Spinner';\nimport { withRouter } from 'react-router-dom';\n\nclass table extends React.Component {\n\n    state = {\n        show: false,\n        modalData: {},\n        pagePerRow: 10,\n        tableRef: null,\n        text: 10\n    }\n   \n    handleClose = () => {\n        this.setState({ show: false });\n    }\n    handleShow = (res) => {\n        this.setState({ show: true, modalData: res });\n        this.props.history.push('/modal');\n    }\n\n    columnDefs = {\n        wrapText: true,\n        headerClass: { textAlign: 'center' },\n        sortable: true,\n        filter: true\n    }\n\n    handlePagination = (e) => {\n        this.setState({ pagePerRow: parseInt(e.target.outerText), text: e.target.outerText }, () => {\n            this.state.tableRef.paginationSetPageSize(Number(this.state.pagePerRow));\n        })\n    }\n\n\n    onGridReady = (params) => {\n        this.setState({ tableRef: params.api });\n    }\n\n    actionButton = (params) => {\n        \n        console.log(document.getElementById(params.data.ifsc).getElementsByTagName('div')[0].innerHTML);\n        if(document.getElementById(params.data.ifsc).getElementsByTagName('div')[0].innerHTML==='<svg class=\"svg-inline--fa fa-star fa-w-18\" aria-hidden=\"true\" data-prefix=\"far\" data-icon=\"star\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" data-fa-i2svg=\"\"><path fill=\"currentColor\" d=\"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\"></path></svg><!-- <i class=\"far fa-star\"></i> -->'){\n             this.props.toogle(params.data,1);\n             document.getElementById(params.data.ifsc).getElementsByTagName('div')[0].innerHTML='<i class=\"fas fa-star\"></i>';\n        }else{\n            this.props.toogle(params.data,0);\n            document.getElementById(params.data.ifsc).getElementsByTagName('div')[0].innerHTML='<i class=\"far fa-star\"></i>';\n        }\n        \n    }\n\n    render() {\n\n        return (\n\n            <Container>\n                {this.props.isLoading\n                    ? <Spinner />\n                    : <>\n\n                        <div className=\"ag-theme-alpine\" style={{ width: '99%', height: '500px' }}>\n                            {/* <Modal\n                                show={this.state.show}\n                                handleClose={this.handleClose}\n                                handleShow={this.handleShow}\n                                modalData={this.state.modalData}\n                            /> */}\n                            <AgGridReact\n                                defaultColDef={this.columnDefs}\n                                rowData={this.props.rowData}\n                                className=\"ag-grid\"\n                                pagination={true}\n                                onRowClicked={(e) => { this.handleShow(e.data) }}\n                                rowHeight=\"80\"\n                                paginationPageSize={this.state.pagePerRow}\n                                onGridReady={this.onGridReady}\n                                rowSelection={'multiple'}\n                            >\n\n                                <AgGridColumn headerName=\"\" field=\"bank_name\" width='15px' cellRendererFramework={(params)=><div id={params.data.ifsc}> <div onClick={()=>this.actionButton(params)}>{this.props.favourites.includes(params.data) ? <i className=\"fas fa-star\"></i> : <i className=\"far fa-star\"></i>}</div></div>}></AgGridColumn>\n                                <AgGridColumn headerName=\"BANK\" field=\"bank_name\" flex=\"1.5\"></AgGridColumn>\n                                <AgGridColumn headerName=\"IFSC\" field=\"ifsc\" flex=\"1\"  ></AgGridColumn>\n                                <AgGridColumn headerName=\"BRANCH\" field=\"branch\" flex=\"1\" ></AgGridColumn>\n                                <AgGridColumn headerName=\"BANK ID\" field=\"bank_id\" flex=\"1\" ></AgGridColumn>\n                                <AgGridColumn headerName=\"ADDRESS\" field=\"address\" flex=\"2\" ></AgGridColumn>\n\n                            </AgGridReact>\n                            <div className='row' style={{ 'marginTop': '5px' }}>\n                                <div className='col-12' style={{ 'textAlign': 'right' }}>\n                                    <p style={{ display: 'inline-block', marginRight: '10px' }}>Pages per row</p>\n                                    <Dropdown size=\"sm\" style={{ display: 'inline-block' }}>\n\n                                        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n                                            {this.state.text}\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item onClick={(e) => { this.handlePagination(e) }}>10</Dropdown.Item>\n                                            <Dropdown.Item onClick={(e) => { this.handlePagination(e) }}>50</Dropdown.Item>\n                                            <Dropdown.Item onClick={(e) => { this.handlePagination(e) }}>100</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </div>\n                            </div>\n\n                        </div>\n                    </>}\n            </Container>\n\n        );\n    }\n\n};\n\nexport default withRouter(table);","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Filters from './filters'\r\nimport Table from './table'\r\nimport React from 'react';\r\n\r\nexport default class AllBanks extends React.Component{\r\n  \r\n  render(){\r\n    console.log(this.props.city);\r\n    return (\r\n      <div>\r\n        <Filters city={this.props.city} category={this.props.category} searchTerm={this.props.searchTerm} changeCity={this.props.changeCity} changeCategory={this.props.changeCategory} changeSearch={this.props.changeSearch}\r\n        />\r\n        <Table favourites={this.props.favourites} isLoading={this.props.isLoading} rowData={this.props.rowData} toogle={this.props.toogle} city={this.props.city} category={this.props.category} searchTerm={this.props.searchTerm}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\n\r\nexport default class favourites extends React.Component{\r\n    state={\r\n        rowData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({rowData:this.props.favourites});\r\n    }\r\n\r\n    columnDefs = {\r\n        wrapText: true,\r\n        flex: 1,\r\n        headerClass: { textAlign: 'center' },\r\n        sortable: true,\r\n        filter: true\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                        <div className=\"ag-theme-alpine\" style={{marginTop:'83px', width: '99%', height: '500px' }}>\r\n                            <AgGridReact\r\n                                defaultColDef={this.columnDefs}\r\n                                rowData={this.state.rowData}\r\n                                className=\"ag-grid\"\r\n                                pagination={true}\r\n                                rowHeight=\"80\"\r\n                                paginationPageSize={10}\r\n                            >\r\n                                <AgGridColumn headerName=\"BANK\" field=\"bank_name\" flex=\"1.5\"></AgGridColumn>\r\n                                <AgGridColumn headerName=\"IFSC\" field=\"ifsc\" flex=\"1\"  ></AgGridColumn>\r\n                                <AgGridColumn headerName=\"BRANCH\" field=\"branch\" flex=\"1\" ></AgGridColumn>\r\n                                <AgGridColumn headerName=\"BANK ID\" field=\"bank_id\" flex=\"1\" ></AgGridColumn>\r\n                                <AgGridColumn headerName=\"ADDRESS\" field=\"address\" flex=\"2\" ></AgGridColumn>\r\n\r\n                            </AgGridReact>\r\n                        </div>\r\n            </Container>\r\n        );\r\n    }\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBarHeader from './components/navbar';\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport AllBanks from './components/allbanks';\nimport Favourites from './components/favourites';\nimport Axios from 'axios';\nimport Modal from './components/modal';\n\nexport default class App extends React.Component {\n  state = {\n    favourites: [],\n    rowData: [],\n    secondaryData: [],\n    cache: {},\n    isLoading: false,\n    city: 'Mumbai',\n    category: 'Bank Name',\n    searchTerm: '',\n  }\n\n  changeCity = (city) => {\n    if (this.state.city !== city) {\n      this.setState({ city: city }, () => {\n        this.makeRequest();\n      });\n    }\n  }\n\n  changeCategory = (category) => {\n\n    if (this.state.category !== category) {\n      this.setState({ category: category }, () => {\n        if (this.state.category && this.state.searchTerm && this.state.category !== '' && this.state.searchTerm !== '')\n          this.setState({ rowData: this.state.secondaryData.filter(element => element[this.translate[this.state.category]].toString().includes(this.state.searchTerm.toUpperCase())) });\n        else {\n          this.setState({ rowData: this.state.secondaryData })\n        }\n      });\n    }\n  }\n\n  changeSearch = (searchValue) => {\n    if (this.state.searchTerm !== searchValue) {\n      this.setState({ searchTerm: searchValue }, () => {\n        if (this.state.category && this.state.searchTerm && this.state.category !== '' && this.state.searchTerm !== '')\n          this.setState({ rowData: this.state.secondaryData.filter(element => element[this.translate[this.state.category]].toString().includes(this.state.searchTerm.toUpperCase())) });\n        else\n          this.setState({ rowData: this.state.secondaryData })\n      })\n    }\n  }\n\n\n  translate = {\n    'Bank Name': 'bank_name',\n    'IFSC': 'ifsc',\n    'Branch': 'branch',\n    'Address': 'address',\n    'Bank Id': 'bank_id'\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true }, () => {\n      Axios.get('https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI').then((result) => {\n        let temp = {};\n        temp['MUMBAI'] = result.data;\n        this.setState({ rowData: result.data, secondaryData: result.data, cache: temp, isLoading: false });\n      })\n    })\n\n  }\n\n  makeRequest = () => {\n\n    if (!this.state.cache.hasOwnProperty(this.state.city.toUpperCase())) {\n      let endPoint = 'https://vast-shore-74260.herokuapp.com/banks?city=' + this.state.city.toUpperCase();\n      this.setState({ isLoading: true }, () => {\n        Axios.get(endPoint).then((result) => {\n          let temp = this.state.cache;\n          temp[this.state.city.toUpperCase()] = result.data;\n          this.setState({ rowData: result.data, secondaryData: result.data, cache: temp, isLoading: false }, () => {\n            if (this.state.category && this.state.searchTerm && this.state.category !== '' && this.state.searchTerm !== '')\n              this.setState({ rowData: this.state.secondaryData.filter(element => element[this.translate[this.state.category]].toString().includes(this.state.searchTerm.toUpperCase())) });\n          });\n        })\n      })\n    } else {\n      this.setState({ rowData: this.state.cache[this.state.city.toUpperCase()], secondaryData: this.state.cache[this.state.city.toUpperCase()] }, () => {\n        if (this.state.category && this.state.searchTerm && this.state.category !== '' && this.state.searchTerm !== '')\n          this.setState({ rowData: this.state.secondaryData.filter(element => element[this.translate[this.state.category]].toString().includes(this.state.searchTerm.toUpperCase())) });\n      })\n    }\n  }\n\n  toogle = (row, flag) => {\n    if (flag) {\n      this.state.favourites.push(row);\n    } else {\n      this.state.favourites.splice(this.state.favourites.indexOf(row), 1);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBarHeader />\n        <Switch>\n          <Route exact path=\"/\" render={() => <AllBanks \n          favourites={this.state.favourites} isLoading={this.state.isLoading} toogle={this.toogle} \n          rowData={this.state.rowData} changeCity={this.changeCity} changeCategory={this.changeCategory} \n          changeSearch={this.changeSearch} city={this.state.city} category={this.state.category} \n          searchTerm={this.state.searchTerm} />} />\n          <Route path=\"/favourites\" render={() => <Favourites favourites={this.state.favourites} />} />\n          <Route path=\"/modal\" render={() => <Modal/>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\" ;\nReactDOM.render(\n\n<BrowserRouter>\n\n<App/>\n\n</BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}